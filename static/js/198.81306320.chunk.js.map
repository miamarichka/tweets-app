{"version":3,"file":"static/js/198.81306320.chunk.js","mappings":"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","sources":["components/TweetsPage/TweetItem/TweetItem.styled.jsx","components/TweetsPage/TweetItem/TweetItem.jsx","utils/converterFunction.jsx","components/TweetsPage/TweetsList/TweetsList.styled.jsx","components/TweetsPage/TweetsList/TweetsList.jsx","components/TweetsPage/TweetsPage.styled.jsx","components/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.li`\r\nheight: 460px;\r\nwidth: 380px;\r\nleft: 435px;\r\ntop: 168px;\r\nborder-radius: 20px;\r\nbackground: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\r\ntext-align: center;\r\nmargin-bottom:48px;\r\n`;\r\n\r\nexport const CardUpperImgWrapper = styled.div`\r\nposition: relative;\r\n`;\r\n\r\nexport const CardUpperLogo = styled.img`\r\nposition: absolute;\r\nleft: 20px;\r\ntop: 20px;\r\n`;\r\n\r\nexport const CardUpperImg = styled.img`\r\nmargin: 28px 36px 18px 36px;\r\n`;\r\n\r\nexport const CircleImg = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\nexport const AvatarWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 26px;\r\n`;\r\nexport const AvatarImg = styled.img`\r\n  height: 62px;\r\n  width: 62px;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 32%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const TweetsText = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  color: #ebd8ff;\r\n  display: block;\r\n  margin-bottom: 16px;\r\n  margin-top: 46px;\r\n`;\r\n\r\nexport const FollowersText = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  color: #ebd8ff;\r\n  display: block;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const FollowButton = styled.button`\r\n  height: 50px;\r\n  width: 196px;\r\n  left: 92px;\r\n  top: 374px;\r\n  border-radius: 10.310786247253418px;\r\n  border-color: transparent;\r\n  padding: 14px 28px 14px 28px;\r\n  background-color: ${(props) =>\r\n    props.children === \"FOLLOW\" ? \"#EBD8FF\" : \"#5CD3A8\"};\r\n  box-shadow: 0px 3.4369285106658936px 3.4369285106658936px 0px #00000040;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  transition: transform 0.2s ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n`;","/** @format */\r\nimport { AvatarImg, AvatarWrapper, CardContainer, CardUpperImg, CardUpperImgWrapper, CardUpperLogo, CircleImg, FollowButton, FollowersText, TweetsText } from \"./TweetItem.styled\";\r\nimport cardUpperPicture from \"../../../assets/staticImages/cardUpperPicture.png\";\r\nimport Logo from \"../../../assets/staticImages/Logo.png\";\r\nimport circle from \"../../../assets/staticImages/circle.png\";\r\nimport line from \"../../../assets/staticImages/line.png\";\r\nimport { formatNumberFollowers } from \"../../../utils/converterFunction\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const TweetItem = ({ tweet, filter }) => {\r\n    const { id, avatar, tweets, followers } = tweet;\r\n    const status = JSON.parse(localStorage.getItem(id));\r\n    const [isClicked, setIsClicked] = useState(status || false);\r\n    \r\n    const btnClickHandler = () => {\r\n        setIsClicked(prevState => !prevState)\r\n    }\r\n  localStorage.setItem(id, JSON.stringify(isClicked));\r\n  \r\n  const isRender =\r\n    filter === \"ALL\" ||\r\n    (filter === \"FOLLOW\" && isClicked) ||\r\n    (filter === \"UNFOLLOWING\" && !isClicked);\r\n\r\n  return (\r\n    isRender && (\r\n      <CardContainer>\r\n        <CardUpperImgWrapper>\r\n          <CardUpperLogo src={Logo} alt='' />\r\n          <CardUpperImg src={cardUpperPicture} alt='' />\r\n        </CardUpperImgWrapper>\r\n        <AvatarWrapper>\r\n          <img src={line} alt='' />\r\n          <CircleImg src={circle} alt='' />\r\n          <AvatarImg src={avatar} alt='' />\r\n        </AvatarWrapper>\r\n        <div>\r\n          <TweetsText>{tweets} TWEETS</TweetsText>\r\n          <FollowersText>\r\n            {formatNumberFollowers(isClicked ? +followers + 1 : +followers)}{\" \"}\r\n            FOLLOWERS\r\n          </FollowersText>\r\n          <FollowButton onClick={btnClickHandler}>\r\n            {isClicked ? \"UNFOLLOWING\" : \"FOLLOW\"}\r\n          </FollowButton>\r\n        </div>\r\n      </CardContainer>\r\n    )\r\n  );\r\n};\r\n\r\nTweetItem.propTypes = {\r\n  tweet: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.string.isRequired,\r\n    followers: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  filter: PropTypes.oneOf([\"ALL\", \"FOLLOW\", \"UNFOLLOWING\"]).isRequired,\r\n};","/** @format */\r\n\r\nexport function formatNumberFollowers(number) {\r\n  return number.toLocaleString();\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const TweetsListStyled = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  padding: 0;\r\n  li {\r\n    flex-basis: calc(33.33% - 20px);\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    margin-left: 0px;\r\n  }\r\n\r\n  li:nth-child(3n) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  li:last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  font-size: 16px;\r\n  border: none;\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.main};\r\n  color: ${(props) => props.theme.colors.main};\r\n  padding: 5px;\r\n`;\r\n\r\nexport const TweetsListWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport const GoBackButton = styled.button`\r\n  margin-right: 20px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  &:hover,\r\n  &:focus{\r\n    color: ${props=> props.theme.colors.main}\r\n  }\r\n`;","import { useState } from \"react\";\r\nimport { TweetItem } from \"../TweetItem/TweetItem\"\r\nimport { GoBackButton, Select, TweetsListStyled, TweetsListWrapper } from \"./TweetsList.styled\";\r\nimport { useNavigate } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const TweetsList = ({ tweets }) => {\r\n  const navigation = useNavigate();\r\n  const [selectStatus, setSelectStatus] = useState('ALL')\r\n\r\n  const selectHandler = (e) => {\r\n    setSelectStatus(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <TweetsListWrapper>\r\n      <div>\r\n        <GoBackButton onClick={()=> navigation(-1)}>Go Back</GoBackButton>\r\n        <Select name='filter' id='filter' onChange={selectHandler}>\r\n          <option value='ALL'>ALL</option>\r\n          <option value='FOLLOW'>FOLLOW</option>\r\n          <option value='UNFOLLOWING'>UNFOLLOWING</option>\r\n        </Select>\r\n      </div>\r\n      <TweetsListStyled>\r\n        {tweets.map((tweet) => (\r\n          <TweetItem key={tweet.id} tweet={tweet} filter={selectStatus} />\r\n        ))}\r\n      </TweetsListStyled>\r\n    </TweetsListWrapper>\r\n  );\r\n}\r\n\r\nTweetsList.propTypes = {\r\n  tweets: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      tweets: PropTypes.string.isRequired,\r\n      followers: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n};","/** @format */\r\n\r\nimport { styled } from \"styled-components\";\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  display: block;\r\n  margin: auto;\r\n  width: 200px;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  line-height: 22px;\r\n  letter-spacing: 0em;\r\n  background-color: ${(props) => props.theme.colors.main};\r\n  color: ${(props) => props.theme.colors.white};\r\n  border-radius: 10.310786247253418px;\r\n  border-color: transparent;\r\n  padding: 14px 28px 14px 28px;\r\n  box-shadow: 0px 3.4369285106658936px 3.4369285106658936px 0px #00000040;\r\n  transition: transform 0.2s ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n`;\r\n\r\nexport const NoMoreTweetsText = styled.p`\r\n  color: black;\r\n  text-align: center;\r\n  font-weight: 600;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TweetsList } from './TweetsList/TweetsList'\r\nimport { LoadMoreButton, NoMoreTweetsText } from './TweetsPage.styled';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nconst BASE_URL = 'https://646614d6228bd07b355afdb8.mockapi.io/users'\r\n\r\nconst TweetsPage = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setIsError] = useState(false);\r\n    const [allTweets, setAllTweets] = useState([])\r\n    const [tweets, setTweets] = useState([]);\r\n    const [itemsPerPage] = useState(3);\r\n    const [tweetsToShowCount, setTweetsToShowCount] = useState(3);\r\n\r\n    useEffect(() => {\r\n        const loadCards = async () => {\r\n            try {\r\n                setIsError(false);\r\n                const responce = await axios.get(BASE_URL);\r\n                if (responce.data.length) {\r\n                    setAllTweets(responce.data)\r\n                    setTweets(responce.data.slice(0, 3));\r\n                }\r\n            } catch{\r\n                setIsError(true);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        loadCards();\r\n    }, []);\r\n\r\n      useEffect(() => {\r\n        setTweets(allTweets.slice(0, tweetsToShowCount));\r\n      }, [tweetsToShowCount, allTweets]);\r\n    \r\n    const LoadMoreHandleClick = () => {\r\n        setTweetsToShowCount(prevState => prevState + itemsPerPage);\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        {isLoading && !isError && <Loader />}\r\n        {isError && !isLoading && <h2> Something went wrong </h2>}\r\n        {!isLoading && !isError && (\r\n          <div>\r\n            {!!tweets.length && <TweetsList tweets={tweets} />}\r\n            {tweets.length === allTweets.length ? (\r\n              <NoMoreTweetsText>You`ve reached all users</NoMoreTweetsText>\r\n            ) : (\r\n              <LoadMoreButton onClick={LoadMoreHandleClick}>\r\n                Load more\r\n              </LoadMoreButton>\r\n            )}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default TweetsPage;"],"names":["CardContainer","styled","_templateObject","_taggedTemplateLiteral","CardUpperImgWrapper","_templateObject2","CardUpperLogo","_templateObject3","CardUpperImg","_templateObject4","CircleImg","_templateObject5","AvatarWrapper","_templateObject6","AvatarImg","_templateObject7","TweetsText","_templateObject8","FollowersText","_templateObject9","FollowButton","_templateObject10","props","children","TweetItem","_ref","number","tweet","filter","id","avatar","tweets","followers","status","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","isClicked","setIsClicked","setItem","stringify","_jsxs","_jsx","src","alt","cardUpperPicture","toLocaleString","onClick","prevState","TweetsListStyled","Select","theme","colors","main","TweetsListWrapper","GoBackButton","TweetsList","navigation","useNavigate","selectStatus","setSelectStatus","name","onChange","e","target","value","map","LoadMoreButton","white","NoMoreTweetsText","isLoading","setIsLoading","_useState3","_useState4","isError","setIsError","_useState5","_useState6","allTweets","setAllTweets","_useState7","_useState8","setTweets","_useState9","itemsPerPage","_useState11","_useState12","tweetsToShowCount","setTweetsToShowCount","useEffect","loadCards","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responce","wrap","_context","prev","next","axios","sent","data","length","slice","t0","finish","stop","apply","arguments","_Fragment","Loader"],"sourceRoot":""}